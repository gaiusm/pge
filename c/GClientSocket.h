/* do not edit automatically generated by mc from ClientSocket.  */
/* ClientSocket.def provides a client TCP interface for ChanId's.

Copyright (C) 2008-2020 Free Software Foundation, Inc.
Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.

This file is part of GNU Modula-2.

GNU Modula-2 is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GNU Modula-2 is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */


#if !defined (_ClientSocket_H)
#   define _ClientSocket_H

#   ifdef __cplusplus
extern "C" {
#   endif
#   if !defined (PROC_D)
#      define PROC_D
       typedef void (*PROC_t) (void);
       typedef struct { PROC_t proc; } PROC;
#   endif

#   include "GIOChan.h"
#   include "GChanConsts.h"

#   if defined (_ClientSocket_C)
#      define EXTERN
#   else
#      define EXTERN extern
#   endif


/*
   OpenSocket - opens a TCP client connection to host:port.
*/

EXTERN void ClientSocket_OpenSocket (IOChan_ChanId *cid, char *host_, unsigned int _host_high, unsigned int port, ChanConsts_FlagSet f, ChanConsts_OpenResults *res);

/*
   Close - if the channel identified by cid is not open to
           a socket stream, the exception wrongDevice is
           raised; otherwise closes the channel, and assigns
           the value identifying the invalid channel to cid.
*/

EXTERN void ClientSocket_Close (IOChan_ChanId *cid);

/*
   IsSocket - tests if the channel identified by cid is open as
              a client socket stream.
*/

EXTERN unsigned int ClientSocket_IsSocket (IOChan_ChanId cid);
#   ifdef __cplusplus
}
#   endif

#   undef EXTERN
#endif
